<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/21/2016 11:16:25 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="PE-WRK-EM-LOCAL"
  DTS:CreatorName="PE-WRK-EM-LOCAL\em_local"
  DTS:DTSID="{2C2F5D84-7C59-433E-B852-DD6AEAA4E592}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="13.0.2165.0"
  DTS:LocaleID="10250"
  DTS:ObjectName="Importar_SUNAT_TC"
  DTS:PackageType="5"
  DTS:VersionBuild="43"
  DTS:VersionGUID="{338662B0-425F-4C88-A990-0A51D2F06912}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Local.Test_DB]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{E55EE853-35B2-46F4-99FC-93A6CB2DB403}"
      DTS:ObjectName="Local.Test_DB">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=.;Initial Catalog=Test_DB;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Ejecucion Final"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{06E457BD-0F1B-44BF-B6A6-636941F2B3EF}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Ejecucion Final"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{E55EE853-35B2-46F4-99FC-93A6CB2DB403}"
          SQLTask:SqlStatementSource="execute Proc_STG_SUNAT_TC" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Extraer datos de la Web"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{3C8B9F76-24E6-408C-AC4F-BB9A0C5E1540}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Extraer datos de la Web"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Extraer datos de la Web\Escribir en STG_SUNAT_TC"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Escribir en STG_SUNAT_TC"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[STG_SUNAT_TC]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Extraer datos de la Web\Escribir en STG_SUNAT_TC.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Local.Test_DB]"
                  connectionManagerRefId="Package.ConnectionManagers[Local.Test_DB]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Extraer datos de la Web\Escribir en STG_SUNAT_TC.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Extraer datos de la Web\Escribir en STG_SUNAT_TC.Inputs[OLE DB Destination Input].Columns[Fecha]"
                      cachedDataType="dbDate"
                      cachedName="Fecha"
                      externalMetadataColumnId="Package\Extraer datos de la Web\Escribir en STG_SUNAT_TC.Inputs[OLE DB Destination Input].ExternalColumns[Fecha]"
                      lineageId="Package\Extraer datos de la Web\Leer Pagina SUNAT.Outputs[SUNAT_TC].Columns[Fecha]" />
                    <inputColumn
                      refId="Package\Extraer datos de la Web\Escribir en STG_SUNAT_TC.Inputs[OLE DB Destination Input].Columns[Compra]"
                      cachedDataType="cy"
                      cachedName="Compra"
                      externalMetadataColumnId="Package\Extraer datos de la Web\Escribir en STG_SUNAT_TC.Inputs[OLE DB Destination Input].ExternalColumns[Compra]"
                      lineageId="Package\Extraer datos de la Web\Leer Pagina SUNAT.Outputs[SUNAT_TC].Columns[Compra]" />
                    <inputColumn
                      refId="Package\Extraer datos de la Web\Escribir en STG_SUNAT_TC.Inputs[OLE DB Destination Input].Columns[Venta]"
                      cachedDataType="cy"
                      cachedName="Venta"
                      externalMetadataColumnId="Package\Extraer datos de la Web\Escribir en STG_SUNAT_TC.Inputs[OLE DB Destination Input].ExternalColumns[Venta]"
                      lineageId="Package\Extraer datos de la Web\Leer Pagina SUNAT.Outputs[SUNAT_TC].Columns[Venta]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Extraer datos de la Web\Escribir en STG_SUNAT_TC.Inputs[OLE DB Destination Input].ExternalColumns[Fecha]"
                      dataType="dbDate"
                      name="Fecha" />
                    <externalMetadataColumn
                      refId="Package\Extraer datos de la Web\Escribir en STG_SUNAT_TC.Inputs[OLE DB Destination Input].ExternalColumns[Compra]"
                      dataType="cy"
                      name="Compra" />
                    <externalMetadataColumn
                      refId="Package\Extraer datos de la Web\Escribir en STG_SUNAT_TC.Inputs[OLE DB Destination Input].ExternalColumns[Venta]"
                      dataType="cy"
                      name="Venta" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Extraer datos de la Web\Escribir en STG_SUNAT_TC.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Extraer datos de la Web\Escribir en STG_SUNAT_TC.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extraer datos de la Web\Escribir en STG_SUNAT_TC.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Extraer datos de la Web\Escribir en STG_SUNAT_TC.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Extraer datos de la Web\Escribir en STG_SUNAT_TC.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Extraer datos de la Web\Escribir en STG_SUNAT_TC.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Extraer datos de la Web\Leer Pagina SUNAT"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Leer Pagina SUNAT"
              version="10">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="33">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_d25f4dd4f48b47f7974361ffadc30d61.vbproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{C7E26168-5FFF-4D9C-906B-BA6BF124A1A9}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>SC_d25f4dd4f48b47f7974361ffadc30d61</RootNamespace>
    <AssemblyName>SC_d25f4dd4f48b47f7974361ffadc30d61</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.vb" />
    <Compile Include="BufferWrapper.vb" />
    <Compile Include="ComponentWrapper.vb" />
  </ItemGroup>
  <!-- Visual Basic supports Importing namespaces (equivalent to using statements in C#).-->
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="packages.config" />
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" />
        <Host Name="SSIS_SC130" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.vb]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
' Microsoft SQL Server Integration Services component wrapper
' This module defines the base class for your component
' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!

Imports System
Imports System.Data
Imports Microsoft.SqlServer.Dts.Pipeline
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper
Imports Microsoft.SqlServer.Dts.Runtime.Wrapper

<CLSCompliant(False)> _
Public Class UserComponent
    Inherits ScriptComponent

    Public Connections As New Connections(Me)
    Public Variables As New Variables(Me)

    Public SUNATTCBuffer As SUNATTCBuffer

    Public Overridable Sub FinishOutputs()
    End Sub

    Private Sub MarkOutputsFinished()

        If SUNATTCBuffer IsNot Nothing Then
            SUNATTCBuffer.SetEndOfRowset
            SUNATTCBuffer = Nothing
        End If

    End Sub

    Public Overrides Sub PrimeOutput(ByVal Outputs As Integer, ByVal OutputIDs() As Integer, ByVal Buffers() As PipelineBuffer, ByVal OutputMap As OutputNameMap)

        For I As Integer = 0 To Outputs - 1
            If OutputIDs(I) = GetOutputID(OutputMap, "SUNAT_TC") Then
                SUNATTCBuffer = New SUNATTCBuffer(Buffers(I), GetColumnIndexes(OutputIDs(I)), OutputMap)
            End If
        Next

        CreateNewOutputRows()

        FinishOutputs()
        MarkOutputsFinished()

    End Sub

    Public Overridable Sub CreateNewOutputRows()
    End Sub

End Class

<CLSCompliant(False)> _
Public Class Connections

    Dim ParentComponent As ScriptComponent

    <CLSCompliant(False)> _
    Public Sub New(ByVal Component As ScriptComponent)
        ParentComponent = Component
    End Sub

End Class

<CLSCompliant(False)> _
Public Class Variables

    Dim ParentComponent As ScriptComponent

    <CLSCompliant(False)> _
    Public Sub New(ByVal Component As ScriptComponent)
        ParentComponent = Component
    End Sub

End Class
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.vb]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[
Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper
Imports Microsoft.SqlServer.Dts.Runtime.Wrapper
Imports System.Text.RegularExpressions ' Se importa esto para poder usar el método Regex.Split()



<Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute>
<CLSCompliant(False)>
Public Class ScriptMain
    Inherits UserComponent


    ' >>> Escrito por Ernesto Moscoso Cam
    ' >>>   Octubre 2016
    ' >>>
    ' >>>     Basado en el código C# hecho por Afu Nang Tse Mundaca: http://r3xet.blogspot.pe/2013/12/obtener-el-tipo-de-cambio-de-sunat-del.html


    ' Esta el método que devuelve las filas del Script Component
    Public Overrides Sub CreateNewOutputRows()
        Dim objDataTable As Data.DataTable ' Tabla auxiliar para guardar los datos de la Web
        Dim objDataRow As Data.DataRow

        ' Primero se configura la tabla para que tenga las 3 columnas necesarias...
        objDataTable = New Data.DataTable
        objDataTable.Columns.Add("Fecha", GetType(Date))
        objDataTable.Columns.Add("Compra", GetType(Double))
        objDataTable.Columns.Add("Venta", GetType(Double))

        ' Se manda poblar la tabla...
        ObtenerDatos(objDataTable)

        ' Si toda ha salido bien y objDataTable tiene la data, entonces se copian los datos al buffer...
        For Each objDataRow In objDataTable.Rows
            SUNATTCBuffer.AddRow()

            SUNATTCBuffer.Fecha = CType(objDataRow(0), Date)
            SUNATTCBuffer.Compra = CType(objDataRow(1), Decimal)
            SUNATTCBuffer.Venta = CType(objDataRow(2), Decimal)
        Next

    End Sub


    Private Sub ObtenerDatos(ByRef objDataTable As Data.DataTable)
        Dim objWebClient As System.Net.WebClient
        Dim strHTML As String = ""
        Dim strURL As String

        Dim intAño As Integer
        Dim intMes As Integer

        Dim dtDateAux As Date

        objWebClient = New System.Net.WebClient()

        dtDateAux = DateSerial(Year(Now), Month(Now), 1).AddDays(-1) ' Este es el último día del mes anterior

        ' Primero: Obtener el TC del mes anterior
        intAño = Year(dtDateAux)
        intMes = Month(dtDateAux)

        ' La página del TC de la SUNAT acepta un Query String donde se le indica el año y el mes
        strURL = "http://www.sunat.gob.pe/cl-at-ittipcam/tcS01Alias?mes=" & intMes & "&anho=" & intAño

        If CargarDocHTML(objWebClient, strURL, strHTML) Then
            ProcesarDocHTML(strHTML, intAño, intMes, objDataTable)
        End If

        ' Segundo: Obtener el TC del mes en curso
        intAño = Year(Now())
        intMes = Month(Now())

        strURL = "http://www.sunat.gob.pe/cl-at-ittipcam/tcS01Alias?mes=" & intMes & "&anho=" & intAño

        If CargarDocHTML(objWebClient, strURL, strHTML) Then ' Si la función retorna falso, entonces no se procesa
            ProcesarDocHTML(strHTML, intAño, intMes, objDataTable)
        End If

        objWebClient.Dispose()

        objDataTable.AcceptChanges() ' Commit
    End Sub

    ' Esta rutina sólo se encarga de conectarse a la web y obtener el HTML
    Private Function CargarDocHTML(ByRef objWebClient As System.Net.WebClient, ByVal strURL As String, ByRef strHTML As String) As Boolean
        Dim bAux As Boolean = False

        Try
            strHTML = objWebClient.DownloadString(strURL) ' Esto podría fallar (debido a problemas con la red, o que el servidor esté fuera de linea, etc)

            bAux = Not (InStr(strHTML, "No existe Informaci") > 0) ' Esta función retorna False si no hay datos
        Catch ex As Exception
            ' Si hay una excepción no se hace nada
        End Try

        Return bAux
    End Function

    ' Esta rutina "procesa" el HTML como String
    ' Lo que hace es recorrer el código HTML de la página y obtener de allí subcadenas...
    Private Sub ProcesarDocHTML(strHTML As String, intAño As Integer, intMes As Integer, ByRef objDataTable As Data.DataTable)
        Dim strTable As String
        Dim strFilas As String()
        Dim strCeldas As String()
        Dim intFirstPosition As Integer
        Dim intLastPosition As Integer
        Dim i As Integer
        Dim j As Integer

        Dim dtFecha As Date
        Dim dblCompra As Double
        Dim dblVenta As Double

        intFirstPosition = InStr(strHTML, "form-table") ' Primero se obtenie la posición de la cadena "form-table"
        intFirstPosition = InStr(intFirstPosition, strHTML, "<tr>") - 1 ' Una vez que el elemento table se ha localizado, se avanza el puntero hasta la primera fila
        ' En una tabla HTML, las filas se identifican con <tr>

        intLastPosition = InStr(intFirstPosition, strHTML, "</table>") - 7 ' Se obtiene la posición del elemento de cierre "</table>"

        strTable = strHTML.Substring(intFirstPosition, intLastPosition - intFirstPosition) ' Se extrae una subcadena que contiene todas las filas de la tabla

        strFilas = Regex.Split(strTable, "</tr>") ' Se usa Split() para obtener un arreglo de filas. Ojo que la primera fila contiene las cabeceras de la tabla

        For i = 1 To strFilas.GetUpperBound(0)  ' El bucle empieza desde 1 en vez de 0 para saltearse la fila de cabeceras
            strCeldas = Regex.Split(strFilas(i).Trim, "/td>") 'Se usa Split() para obtener un arrego de celdas
            ' ...............................................Al dejar el caracter '<' se puede delimitar luego el contenido de la celda

            ' strCeldas tiene TODAS las celdas de una fila, pero se necesitan leer las celdas 3 a la vez... 
            For j = 0 To strCeldas.GetUpperBound(0) Step 3 'Las celdas siempre aparecen en grupos de 3: ("Dia", "Compra", "Venta")
                If strCeldas(j) <> "" Then ' La función RegEx.Split a veces deja una cadena nula al final del arreglo. Por eso se itera sólo donde hay datos
                    ObtenerTriplete(strCeldas, j, intAño, intMes, dtFecha, dblCompra, dblVenta) ' Un triplete se define como (dtFecha, dblCompra, dblVenta)
                    AddRow(objDataTable, dtFecha, dblCompra, dblVenta)
                End If
            Next
        Next
    End Sub

    ' Valores posibles para intIndice: 0, 3, 6, 9
    ' Un triplete es un grupo de 3 celdas, una para la Fecha, otra para el valor de Compra y finalmente otra para el valor de Venta
    Private Sub ObtenerTriplete(strCeldas As String(), intIndice As Integer, intAño As Integer, intMes As Integer, ByRef dtFecha As Date, ByRef dblCompra As Double, ByRef dblVenta As Double)
        Dim intDia As Integer

        intDia = CInt(ObtenerValorCelda(strCeldas(intIndice)))
        dtFecha = DateSerial(intAño, intMes, intDia)

        dblCompra = CDbl(ObtenerValorCelda(strCeldas(intIndice + 1)))
        dblVenta = CDbl(ObtenerValorCelda(strCeldas(intIndice + 2)))
    End Sub

    ' Esta función extrae el Valor del elemento <td>
    Private Function ObtenerValorCelda(strCelda As String) As String
        Dim strValorCelda As String
        Dim intFirstPosition As Integer
        Dim intLastPosition As Integer

        intFirstPosition = InStr(strCelda, "<strong>") ' El elemento "<strong>" sólo se encuentra en la primera columna del triplete ("Dia")
        If intFirstPosition > 0 Then
            intLastPosition = InStr(strCelda, "</strong>")
            intFirstPosition = intFirstPosition + 7
        Else ' Si el elemento "<strong>" no se ha encontrado, entonces estamos en la columna "Compra" o "Venta"
            intFirstPosition = InStr(strCelda, "tne10") ' la cadena 'class = "tne10"' sólo se encuentra en las columnas "Compra" o "Venta"
            intFirstPosition = intFirstPosition + 7
            intLastPosition = InStr(intFirstPosition, strCelda, "<") ' El caracter '<' fue dejado intencionalmente cuando se usó RegEx.Split() para poderse usarsele como marcador aquí
        End If

        strValorCelda = strCelda.Substring(intFirstPosition, intLastPosition - intFirstPosition - 1).Trim ' Después de obtenerse las posiciones, se extrae la subcadena del valor

        Return strValorCelda
    End Function

    ' Agrega una fila en objDataTable
    Private Sub AddRow(ByRef objDataTable As Data.DataTable, dtFecha As Date, dblCompra As Double, dblVenta As Double)
        Dim objDataRow As Data.DataRow

        objDataRow = objDataTable.NewRow

        objDataRow(0) = dtFecha
        objDataRow(1) = dblCompra
        objDataRow(2) = dblVenta

        objDataTable.Rows.Add(objDataRow)
    End Sub

End Class
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[My Project\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[My Project\AssemblyInfo.vb]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("SC_d25f4dd4f48b47f7974361ffadc30d61")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("SC_d25f4dd4f48b47f7974361ffadc30d61")> 
<Assembly: AssemblyCopyright("Copyright @  2016")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("54257ff8-f3bd-44c5-9c7e-e903bb560016")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> 
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[My Project\Settings.Designer.vb]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[packages.config]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="HtmlAgilityPack" version="1.4.9.5" targetFramework="net45" />
</packages>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_d25f4dd4f48b47f7974361ffadc30d61</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_d25f4dd4f48b47f7974361ffadc30d61</msb:DisplayName>
		<msb:ProjectId>{59758B79-925F-43B5-93DD-771259FA58BB}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_d25f4dd4f48b47f7974361ffadc30d61.vbproj"/>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="ComponentWrapper.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="packages.config"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
		<msb:File Include="main.vb"/>
		<msb:File Include="BufferWrapper.vb"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[My Project\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.vb]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
' Microsoft SQL Server Integration Services buffer wrappers
' This module defines classes for accessing data flow buffers
' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!


Option Strict Off   ' This allows usage of PipelineBuffer typed accessors.

Imports System
Imports System.Data
Imports Microsoft.SqlServer.Dts.Pipeline
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper

<CLSCompliant(False)> _
Public Class SUNATTCBuffer
    Inherits ScriptBuffer

    Public Sub New(ByVal Buffer As PipelineBuffer, ByVal BufferColumnIndexes As Integer(), ByVal OutputMap As OutputNameMap)
        MyBase.New(Buffer, BufferColumnIndexes, OutputMap)
    End Sub

    Public WriteOnly Property [Fecha]() As DateTime
        Set
            Me(0) = Value
        End Set
    End Property
    Public WriteOnly Property [Fecha_IsNull] As Boolean
        Set
            If (value)
                SetNull(0)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [Compra]() As Decimal
        Set
            Me(1) = Value
        End Set
    End Property
    Public WriteOnly Property [Compra_IsNull] As Boolean
        Set
            If (value)
                SetNull(1)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [Venta]() As Decimal
        Set
            Me(2) = Value
        End Set
    End Property
    Public WriteOnly Property [Venta_IsNull] As Boolean
        Set
            If (value)
                SetNull(2)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public Overloads Sub AddRow()
        MyBase.AddRow()
    End Sub

    Public Overloads Sub SetEndOfRowset()
        MyBase.SetEndOfRowset()
    End Sub

    Public Overloads Function EndOfRowset() As Boolean
        EndOfRowset = MyBase.EndOfRowset
    End Function

End Class
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[My Project\Resources.Designer.vb]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_d25f4dd4f48b47f7974361ffadc30d61.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
AAAAAAYIFAGSAh0AcCUAAAAABgg1BhUAHgCHJQAAAACGAE8MBgAfAI8lAAAAAIYAgQsGAB8AmCUA
AAAAhgCEC6MAHwCtJQAAAAAGGKAIBgAfAM0lAAAAAEYDJQsGAB8AzyUAAAAAAQBKAQYAHwDsJQAA
AADGAiAMmQIfAM0lAAAAAEYDPAsGACMARSYAAAAABhigCKcCIwBUJgAAAAAGGKAIpwIkAGMmAAAA
ABEYpgj6ACUAdCYAAAAABhigCAYAJQB8JgAAAAAWCAwFrgIlANgmAAAAAMYCmgqLASUA5iYAAAAA
xgKsAZABJgDuJgAAAACDADQCswImAPomAAAAAMYCdwUsASYABCcAAAAAEQCnALgCJgAkJwAAAAAB
AJMAwAInALogAAAAAAYYoAgGACgAMCcAAAAAAwiTAUoAKABkJwAAAAAGGKAIBgAoAAAAAQApBQAA
AQC4AQAAAQCbCwAAAgCKAAAAAwCCAAAAAQCCAAAAAgBGBwAAAwDiCAAABAC4AQAAAQDFCAAAAgB6
AQAAAwBGBwAABADiCAAABQDfAAAABgDyAAAABwAeAQAAAQDMAAAAAQC4AQAAAgDfAAAAAwDyAAAA
BAAeAQAAAQDuBwAAAgBiCgAAAwBcBwAAAQApBQAAAQApBQAAAQApBQAAAQApBQAAAQApBQAAAQAp
BQAAAQArCwAAAgC7CAAAAwAECwAABABcBwAAAQDMCwAAAQDMCwAAAQBMBwAAAQCjAQAAAQCjAQkA
oAgBABEAoAgGABkAoAgKACkAoAgQADEAoAgQADkAoAgQAEEAoAgQAEkAoAgQAFEAoAgQAFkAoAgV
AGEAoAgVAGkAoAgQAHEAoAgQAHkAoAgQAIEAoAgaAJEAoAggAKkAoAgGALEAoAgGALkAoAgGANEA
oAgmAOkAoAgQAAEBoAgGAHEBoAgGAJkAoAgGAKEAoAgGAAwAoAgGABQAoAgGABwAoAgGACQAoAgG
AAwAkwFKABQAkwFKABwAkwFKACQAkwFKAMEAoAgGANkA7AFPANkAkAxXAPEAoAhdABEBoAgGABEB
oQpxAIkBRgF3ABEBMwuAAKEBiAiGACEB1guMABkBTgaQAKkBkAKVAKkBoAWcACEBLAyjALEBiAIG
ACkBoAgGALkBPwy0ALkBZge6ALkBjwW6ALkBlQXBADEBUAvKAKkBdwXRAMEBWAvWAMkBiAIGABEB
SgoGACkBWgXlANEBtQjqAOEBbAjzAOEBWgj6ANEBtQgQAcEBgAUaAekBkAsgAfEBXgEnAcEBZwYs
AfkBaQUwAakBCQg7AakB0QFAAREBVgxQARkBVwZWAaEBRgFcAUEBoAhjAUEBVwZWAUEBRgYBAAEC
oAgQAEEBTwwGAEEBgQsGAEEBhAujAGEBoAgGAGEBWABzAWEBdgp7AQkCIAWBAWkBoAgGABECNAiG
AREClguGAcEAmgqLAcEArAGQAcEAdwUsARkChAGcATQANQyzATwADAVKADwAFgXKATwAoAgGACkA
qwCHBC4ACwAAAy4AEwAJAy4AGwAoAy4AIwAxAy4AKwBaAy4AMwBaAy4AOwAxAy4AQwBgAy4ASwBa
Ay4AUwB3Ay4AWwBaAy4AYwB9Ay4AawCnAy4AcwC0A0AAiwD+A0AAgwADBEMAewAMBEMAgwADBEkA
qwCYBGMAewAMBGMAgwADBGkAqwCsBIAAiwD+A4MAkwD+A4MAmwD+A4MAewAMBIkAqwC5BKAAiwD+
A6kAgwAoA8AAiwD+A8MAswD+A8MAUwBaA8kAgwAoA+AAiwD+A+MAUwBaAwMBUwBaAyMBUwBaA0MB
UwBaA4MBgwADBIMBowAlBKMBgwADBKMBWwBaA6kBuwD+A2AEUwBaA4AEUwBaAwAFgwADBAAFiwD+
AyAFgwADBCAFiwD+A0AFgwADBEAFiwD+A2AFgwADBGAFiwD+A4AFiwD+A6AFiwD+A8AFiwD+A8AF
gwADBOAFiwD+AwAGiwD+AwAGgwADBGUApwDeAP4ANwFFAUoBbwGUAacBBAABAAUABQAHAAcACwAN
AA0ADgAAAEkIyAIAALEGzQIAAC8I0gIAABkJ1wIAAPkH3AIAAFgC4QIAAOEA5gIAABYG7AIAAPUA
8AIAACcG7AIAACEB8AIAADkG7AIAACkF9gIAAJcB+wICAAQAAwACAAUABQACAAYABwACAAcACQAC
AAkACwACAAoADQABAAsADQABABUADwABABYAEQABABcAEwABABgAFQABABkAFwABABoAGQACACcA
GwACAC8AHQAuADUAPABDAJkBrAG7AcIBBIAAAAEAAAAAAAAAAAAAAAAAAQAAAAQAAAAAAAAAAAAA
ANABJwEAAAAABAAAAAAAAAAAAAAA0AFgBgAAAAAKAAAAAAAAAAAAAADZATABAAAAAA0AAAAAAAAA
AAAAAOIB4gsAAAAABAAAAAAAAAAAAAAA0AH8AAAAAAANAAAAAAAAAAAAAADiAf8LAAAAAAAAAAAB
AAAAAwoAAAwABAANAAQAAAAQABoAkQAAABAAWQCRAAAAAABbAJEAtwCiAbcAxQEAAAAAAFNDX2Qy
NWY0ZGQ0ZjQ4YjQ3Zjc5NzQzNjFmZmFkYzMwZDYxAENvbnRleHRWYWx1ZWAxAFRocmVhZFNhZmVP
YmplY3RQcm92aWRlcmAxADxNb2R1bGU+AEdldE91dHB1dElEAENhcmdhckRvY0hUTUwAUHJvY2Vz
YXJEb2NIVE1MAHN0ckhUTUwAc3RyVVJMAFQARGlzcG9zZV9fSW5zdGFuY2VfXwBDcmVhdGVfX0lu
c3RhbmNlX18AT2J0ZW5lclZhbG9yQ2VsZGEAc3RyQ2VsZGEAc2V0X0ZlY2hhAGR0RmVjaGEAc2V0
X0NvbXByYQBkYmxDb21wcmEAU3lzdGVtLkRhdGEAUHJvamVjdERhdGEAc2V0X1ZlbnRhAGRibFZl
bnRhAG1zY29ybGliAE1pY3Jvc29mdC5WaXN1YWxCYXNpYwBBZGQATWFya091dHB1dHNGaW5pc2hl
ZABHZXRVcHBlckJvdW5kAENvbXBhcmVNZXRob2QAaW50SW5kaWNlAENyZWF0ZUluc3RhbmNlAGdl
dF9HZXRJbnN0YW5jZQBpbnN0YW5jZQBHZXRIYXNoQ29kZQBvYmpEYXRhVGFibGUASURpc3Bvc2Fi
bGUAVG9Eb3VibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUARGF0ZUFuZFRp
bWUARGF0ZVRpbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAR2V0VHlwZQBnZXRf
Q3VsdHVyZQBzZXRfQ3VsdHVyZQBfcmVzQ3VsdHVyZQBBcHBsaWNhdGlvbkJhc2UAQXBwbGljYXRp
b25TZXR0aW5nc0Jhc2UARGlzcG9zZQBUb0RhdGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAT2J0ZW5l
clRyaXBsZXRlAEd1aWRBdHRyaWJ1dGUASGVscEtleXdvcmRBdHRyaWJ1dGUAR2VuZXJhdGVkQ29k
ZUF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1
dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAENvbVZpc2libGVBdHRyaWJ1dGUAQXNzZW1ibHlU
aXRsZUF0dHJpYnV0ZQBTdGFuZGFyZE1vZHVsZUF0dHJpYnV0ZQBIaWRlTW9kdWxlTmFtZUF0dHJp
YnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUA
RGVidWdnZXJIaWRkZW5BdHRyaWJ1dGUAQXNzZW1ibHlGaWxlVmVyc2lvbkF0dHJpYnV0ZQBNeUdy
b3VwQ29sbGVjdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBp
bGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2Vt
Ymx5Q29weXJpZ2h0QXR0cmlidXRlAENMU0NvbXBsaWFudEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29t
cG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGlt
ZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAbV9WYWx1ZQBnZXRfVmFsdWUAc2V0X1ZhbHVlAEdldE9i
amVjdFZhbHVlAFN5c3RlbS5UaHJlYWRpbmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBEb3du
bG9hZFN0cmluZwBDb21wYXJlU3RyaW5nAFRvU3RyaW5nAFN1YnN0cmluZwBNYXRoAE1vbnRoAERh
dGVTZXJpYWwAVG9EZWNpbWFsAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5NeVNlcnZpY2VzLkludGVy
bmFsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ19kMjVmNGRkNGY0OGI0N2Y3OTc0MzYxZmZhZGMz
MGQ2MS5kbGwAc2V0X0ZlY2hhX0lzTnVsbABzZXRfQ29tcHJhX0lzTnVsbABzZXRfVmVudGFfSXNO
dWxsAFNldE51bGwAZ2V0X0l0ZW0Ac2V0X0l0ZW0AU3lzdGVtAFRyaW0AU3lzdGVtLkNvbXBvbmVu
dE1vZGVsLkRlc2lnbgBTY3JpcHRNYWluAERhdGFDb2x1bW4AZ2V0X0FwcGxpY2F0aW9uAE15QXBw
bGljYXRpb24AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVt
LlJlZmxlY3Rpb24ARGF0YUNvbHVtbkNvbGxlY3Rpb24ARGF0YVJvd0NvbGxlY3Rpb24ASW52YWxp
ZE9wZXJhdGlvbkV4Y2VwdGlvbgBDdWx0dXJlSW5mbwBpbnRBw7FvAE91dHB1dE5hbWVNYXAAT3V0
cHV0TWFwAFllYXIAbV9BcHBPYmplY3RQcm92aWRlcgBtX1VzZXJPYmplY3RQcm92aWRlcgBtX0Nv
bXB1dGVyT2JqZWN0UHJvdmlkZXIAbV9NeVdlYlNlcnZpY2VzT2JqZWN0UHJvdmlkZXIAU1VOQVRU
Q0J1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBU
b0ludGVnZXIAU3lzdGVtLkNvZGVEb20uQ29tcGlsZXIAZ2V0X1VzZXIARW50ZXIAZ2V0X0NvbXB1
dGVyAE15Q29tcHV0ZXIAX3Jlc01ncgBDbGVhclByb2plY3RFcnJvcgBTZXRQcm9qZWN0RXJyb3IA
SUVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgBBY3RpdmF0b3IALmN0b3IALmNjdG9yAE1vbml0b3IA
SW5TdHIAT3V0cHV0SURzAHN0ckNlbGRhcwBTeXN0ZW0uRGlhZ25vc3RpY3MAaW50TWVzAE1pY3Jv
c29mdC5WaXN1YWxCYXNpYy5EZXZpY2VzAGdldF9XZWJTZXJ2aWNlcwBNeVdlYlNlcnZpY2VzAE1p
Y3Jvc29mdC5WaXN1YWxCYXNpYy5BcHBsaWNhdGlvblNlcnZpY2VzAFN5c3RlbS5SdW50aW1lLklu
dGVyb3BTZXJ2aWNlcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0
ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfZDI1ZjRkZDRm
NDhiNDdmNzk3NDM2MWZmYWRjMzBkNjEuTXkuUmVzb3VyY2VzAE15UmVzb3VyY2VzAFNDX2QyNWY0
ZGQ0ZjQ4YjQ3Zjc5NzQzNjFmZmFkYzMwZDYxLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5n
TW9kZXMAQWNjZXB0Q2hhbmdlcwBWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1
bW5JbmRleGVzAFN0cmluZ3MATXlTZXR0aW5ncwBFcXVhbHMAZ2V0X0NvbHVtbnMAQ29udmVyc2lv
bnMAU3lzdGVtLlRleHQuUmVndWxhckV4cHJlc3Npb25zAFN5c3RlbS5Db2xsZWN0aW9ucwBDb25u
ZWN0aW9ucwBPYnRlbmVyRGF0b3MAQnVmZmVycwBSdW50aW1lSGVscGVycwBPcGVyYXRvcnMARmlu
aXNoT3V0cHV0cwBnZXRfUm93cwBDcmVhdGVOZXdPdXRwdXRSb3dzAEFkZERheXMAQ29uY2F0AG1f
U3luY09iamVjdABNeVByb2plY3QAU3lzdGVtLk5ldABTZXRFbmRPZlJvd3NldABTcGxpdABFeGl0
AG9ialdlYkNsaWVudABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25l
bnQAZ2V0X0N1cnJlbnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3Fs
U2VydmVyLlBpcGVsaW5lSG9zdABQcmltZU91dHB1dABNb3ZlTmV4dABtX0NvbnRleHQAZ2V0X05v
dwBEYXRhUm93AEFkZFJvdwBOZXdSb3cAUmVnZXgAU0NfZDI1ZjRkZDRmNDhiNDdmNzk3NDM2MWZm
YWRjMzBkNjEuTXkAQXJyYXkAZ2V0X0Fzc2VtYmx5AAAAAAAxTQB5AC4AUgBlAHMAbwB1AHIAYwBl
AHMALgBNAHkAUgBlAHMAbwB1AHIAYwBlAHMAAAtGAGUAYwBoAGEAAA1DAG8AbQBwAHIAYQAAC1YA
ZQBuAHQAYQAAAQBtaAB0AHQAcAA6AC8ALwB3AHcAdwAuAHMAdQBuAGEAdAAuAGcAbwBiAC4AcABl
AC8AYwBsAC0AYQB0AC0AaQB0AHQAaQBwAGMAYQBtAC8AdABjAFMAMAAxAEEAbABpAGEAcwA/AG0A
ZQBzAD0AAQ0mAGEAbgBoAG8APQAAJ04AbwAgAGUAeABpAHMAdABlACAASQBuAGYAbwByAG0AYQBj
AGkAABVmAG8AcgBtAC0AdABhAGIAbABlAAEJPAB0AHIAPgAAETwALwB0AGEAYgBsAGUAPgAACzwA
LwB0AHIAPgAACS8AdABkAD4AABE8AHMAdAByAG8AbgBnAD4AABM8AC8AcwB0AHIAbwBuAGcAPgAA
C3QAbgBlADEAMAAAAzwAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBu
AG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEA
IAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAu
AAARUwBVAE4AQQBUAF8AVABDAACembXDWj2mSIYBKVJCA4QaAAQgAQEIAyAAAQUgAQEREQQgAQEO
BCABAQIFIAIBDg4FIAEBEUUHIAQBDg4ODgYVEjQBEgwGFRI0ARIIBhUSNAESZQYVEjQBEjAEIAAT
AAcAARJtEYC9BSAAEoDBByACAQ4SgMELBwMSgIkSgI0SgJEFIAASgMUIIAISgMkOEm0FIAASgNEF
IAASgJEDIAAcBCABHAgGAAERgJkcBgABEYCtHAMgAAIMBwYSgJUODggIEYCZBQAAEYCZBgABCBGA
mQgAAxGAmQgICAYgARGAmQ0EAAEOCAcABA4ODg4OBgcCAhKAnQQgAQ4OCAADCA4OEYDtBgABARKA
nQMAAAERBwsdDh0OCAgICBGAmQ0NCAgJAAQICA4OEYDtBSACDggIBgACHQ4ODgQgAQgIAyAADgYA
AwgODgIDBwEIBAABCA4EAAENDgQHAggIBQcBEoCNBSAAEoCNBSACAQgcBiABARKAjQsgAwESgKUd
CBKAqQMHAQIHAAIIEoCpDgUgAR0ICAQAARwcBAABARwEIAECHAMgAAgEBwEeAAIeAAUQAQAeAAQK
AR4ABAcBEwAGFRI0ARMABwYVEnEBEwAGFRJxARMAAhMABAoBEwAFIAEBEwAIt3pcVhk04IkIsD9f
fxHVCjoIiYRdzYCAzJEHBhUSNAESDAcGFRI0ARIIBwYVEjQBEmUHBhUSNAESMAMGEnkDBhJ9AwYS
JAMGEigDBhIcBAYSgLEDBhIsAgYcBAAAEgwEAAASCAQAABJlBAAAEjAEAAASeQQAABJ9BQABARJ9
ByABARASgIkKIAMCEBKAlQ4QDgogBAEOCAgQEoCJECAHAR0OCAgIEBGAmRANEA0MIAQBEBKAiRGA
mQ0NBiABARGAmQYgAQERgK0NIAQBCB0IHRKApRKAqQYgAQESgLEEAAASLAQgABJtBxABAR4AHgAH
MAEBARAeAAQIABIMBAgAEggECAASZQQIABIwBAgAEnkECAASfQUoABGAmQMoAAIFKAARgK0ECAAS
LAQoABMACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgB
ACNTQ19kMjVmNGRkNGY0OGI0N2Y3OTc0MzYxZmZhZGMzMGQ2MQAABQEAAAAAFgEAEUNvcHlyaWdo
dCBAICAyMDE2AAAFAQABAAApAQAkNTQyNTdmZjgtZjNiZC00NGM1LTljN2UtZTkwM2JiNTYwMDE2
AAAMAQAHMS4wLjAuMAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdv
cmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUEAQAAAAgBAAEAAAAAABgBAApNeVRlbXBs
YXRlCDExLjAuMC4wAABhAQA0U3lzdGVtLldlYi5TZXJ2aWNlcy5Qcm90b2NvbHMuU29hcEh0dHBD
bGllbnRQcm90b2NvbBJDcmVhdGVfX0luc3RhbmNlX18TRGlzcG9zZV9fSW5zdGFuY2VfXwAAABAB
AAtNeS5Db21wdXRlcgAAEwEADk15LkFwcGxpY2F0aW9uAAAMAQAHTXkuVXNlcgAAEwEADk15Lldl
YlNlcnZpY2VzAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VS
ZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGlj
S2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJj
ZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAWEgAAAAAAAAAAAAAckgAAAAgAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAGRIAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgA
AIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA7AMA
AAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEA
AAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBG
AGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBEwD
AAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0AGIAMAAA
ABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUA
AAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8AZAAy
ADUAZgA0AGQAZAA0AGYANAA4AGIANAA3AGYANwA5ADcANAAzADYAMQBmAGYAYQBkAGMAMwAwAGQA
NgAxAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAAcAAo
AAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBkADIANQBmADQAZABkADQAZgA0ADgA
YgA0ADcAZgA3ADkANwA0ADMANgAxAGYAZgBhAGQAYwAzADAAZAA2ADEALgBkAGwAbAAAAEgAEgAB
AEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAA
MgAwADEANgAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAo
AAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfAGQAMgA1AGYANABkAGQA
NABmADQAOABiADQANwBmADcAOQA3ADQAMwA2ADEAZgBmAGEAZABjADMAMABkADYAMQAuAGQAbABs
AAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwBkADIANQBmADQAZABkADQA
ZgA0ADgAYgA0ADcAZgA3ADkANwA0ADMANgAxAGYAZgBhAGQAYwAzADAAZAA2ADEAAAA0AAgAAQBQ
AHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEAQQBzAHMA
ZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAAIQ4AAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_d25f4dd4f48b47f7974361ffadc30d61</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">VisualBasic</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">c08b165eaef38ef12cfedd2487e7c4c5</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataShaChecksum"
                  typeConverter="NOTBROWSABLE">1ac344d567b4d076ee773d7aff1777dc054b05dc</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <outputs>
                <output
                  refId="Package\Extraer datos de la Web\Leer Pagina SUNAT.Outputs[SUNAT_TC]"
                  hasSideEffects="true"
                  name="SUNAT_TC">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extraer datos de la Web\Leer Pagina SUNAT.Outputs[SUNAT_TC].Columns[Fecha]"
                      dataType="dbDate"
                      lineageId="Package\Extraer datos de la Web\Leer Pagina SUNAT.Outputs[SUNAT_TC].Columns[Fecha]"
                      name="Fecha" />
                    <outputColumn
                      refId="Package\Extraer datos de la Web\Leer Pagina SUNAT.Outputs[SUNAT_TC].Columns[Compra]"
                      dataType="cy"
                      lineageId="Package\Extraer datos de la Web\Leer Pagina SUNAT.Outputs[SUNAT_TC].Columns[Compra]"
                      name="Compra" />
                    <outputColumn
                      refId="Package\Extraer datos de la Web\Leer Pagina SUNAT.Outputs[SUNAT_TC].Columns[Venta]"
                      dataType="cy"
                      lineageId="Package\Extraer datos de la Web\Leer Pagina SUNAT.Outputs[SUNAT_TC].Columns[Venta]"
                      name="Venta" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Extraer datos de la Web.Paths[SUNAT_TC]"
              endId="Package\Extraer datos de la Web\Escribir en STG_SUNAT_TC.Inputs[OLE DB Destination Input]"
              name="SUNAT_TC"
              startId="Package\Extraer datos de la Web\Leer Pagina SUNAT.Outputs[SUNAT_TC]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Limpiar STG_SUNAT_TC"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{C43CA5FB-3E44-47D8-A396-E7A85891F363}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Limpiar STG_SUNAT_TC"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{E55EE853-35B2-46F4-99FC-93A6CB2DB403}"
          SQLTask:SqlStatementSource="truncate table STG_SUNAT_TC" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{997743EC-417A-452D-9A29-70D4218724E8}"
      DTS:From="Package\Limpiar STG_SUNAT_TC"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Extraer datos de la Web" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{7239B28F-4E55-440B-A75A-693953BFB8AD}"
      DTS:From="Package\Extraer datos de la Web"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Ejecucion Final" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="193,42"
          Id="Package\Limpiar STG_SUNAT_TC"
          TopLeft="721.5,207" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="819.25,249">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,71"
              Start="0,0"
              End="0,63.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,63.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="192,42"
          Id="Package\Extraer datos de la Web"
          TopLeft="724.5,320" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="820.5,362">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,78"
              Start="0,0"
              End="0,70.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,70.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="148,42"
          Id="Package\Ejecucion Final"
          TopLeft="746.5,440" />
        <AnnotationLayout
          Text="Se ejecuta Proc_STG_SUNAT_TC"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="195,60"
          Id="d53b2e8e-ddf8-40de-94b9-b47830ad6f21"
          TopLeft="931,439" />
        <AnnotationLayout
          Text="Se aplica un truncate table"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="169,60"
          Id="e2d9f3f4-6622-43b7-a27b-f0235439bb9b"
          TopLeft="933,211" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Extraer datos de la Web">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="208,42"
          Id="Package\Extraer datos de la Web\Escribir en STG_SUNAT_TC"
          TopLeft="171,186" />
        <NodeLayout
          Size="170,42"
          Id="Package\Extraer datos de la Web\Leer Pagina SUNAT"
          TopLeft="196,24" />
        <EdgeLayout
          Id="Package\Extraer datos de la Web.Paths[SUNAT_TC]"
          TopLeft="278,66">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,120"
              Start="0,0"
              End="0,112.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,112.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Extraer datos de la Web\Escribir en STG_SUNAT_TC">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>